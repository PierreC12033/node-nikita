// Generated by CoffeeScript 2.5.1
// # `nikita.fs.unlink`

// Remove a non-directory type file.

// ## Hook
var error, errors, handler, on_action, schema;

on_action = function({config, metadata}) {
  if (metadata.argument != null) {
    return config.target = metadata.argument;
  }
};

// ## Schema
schema = {
  type: 'object',
  properties: {
    'target': {
      type: 'string',
      description: `Location of the file to remove.`
    }
  },
  required: ['target']
};

// ## Handler
handler = async function({config}) {
  var err;
  this.log({
    message: "Entering fs.unlink",
    level: 'DEBUG',
    module: 'nikita/lib/fs/unlink'
  });
  try {
    // Not, error codes are arbitrary, unlink command always exit with code 1
    return (await this.execute(`[ ! -e '${config.target}' ] && exit 2
[ -d '${config.target}' ] && exit 3
unlink '${config.target}'`));
  } catch (error1) {
    err = error1;
    switch (err.exit_code) {
      case 2:
        err = errors.NIKITA_FS_UNLINK_ENOENT({
          config: config
        });
        break;
      case 3:
        err = errors.NIKITA_FS_UNLINK_EPERM({
          config: config
        });
    }
    throw err;
  }
};

// ## Exports
module.exports = {
  handler: handler,
  hooks: {
    on_action: on_action
  },
  metadata: {
    log: false,
    raw_output: true
  },
  schema: schema
};

// ## Errors
errors = {
  NIKITA_FS_UNLINK_ENOENT: function({config}) {
    return error('NIKITA_FS_UNLINK_ENOENT', ['the file to remove does not exists,', `got ${JSON.stringify(config.target)}`]);
  },
  NIKITA_FS_UNLINK_EPERM: function({config}) {
    return error('NIKITA_FS_UNLINK_ENOENT', ['you do not have the permission to remove the file,', `got ${JSON.stringify(config.target)}`]);
  }
};

// ## Dependencies
error = require('../../../utils/error');
